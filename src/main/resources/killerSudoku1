:- use_module(library(bounds)).
:- set_prolog_flag(stack_limit, 10 000 000 000).

diff(L) :- L in 1..9, all_different(L).

rows([
		[A1, A2, A3, A4, A5, A6, A7, A8, A9],
		[B1, B2, B3, B4, B5, B6, B7, B8, B9],
		[C1, C2, C3, C4, C5, C6, C7, C8, C9],
		[D1, D2, D3, D4, D5, D6, D7, D8, D9],
		[E1, E2, E3, E4, E5, E6, E7, E8, E9],
		[F1, F2, F3, F4, F5, F6, F7, F8, F9],
		[G1, G2, G3, G4, G5, G6, G7, G8, G9],
		[H1, H2, H3, H4, H5, H6, H7, H8, H9],
		[I1, I2, I3, I4, I5, I6, I7, I8, I9]]) :-
	diff([A1, A2, A3, A4, A5, A6, A7, A8, A9]),
	diff([B1, B2, B3, B4, B5, B6, B7, B8, B9]),
	diff([C1, C2, C3, C4, C5, C6, C7, C8, C9]),
	diff([D1, D2, D3, D4, D5, D6, D7, D8, D9]),
	diff([E1, E2, E3, E4, E5, E6, E7, E8, E9]),
	diff([F1, F2, F3, F4, F5, F6, F7, F8, F9]),
	diff([G1, G2, G3, G4, G5, G6, G7, G8, G9]),
	diff([H1, H2, H3, H4, H5, H6, H7, H8, H9]),
	diff([I1, I2, I3, I4, I5, I6, I7, I8, I9]).

cols([
		[A1, A2, A3, A4, A5, A6, A7, A8, A9],
		[B1, B2, B3, B4, B5, B6, B7, B8, B9],
		[C1, C2, C3, C4, C5, C6, C7, C8, C9],
		[D1, D2, D3, D4, D5, D6, D7, D8, D9],
		[E1, E2, E3, E4, E5, E6, E7, E8, E9],
		[F1, F2, F3, F4, F5, F6, F7, F8, F9],
		[G1, G2, G3, G4, G5, G6, G7, G8, G9],
		[H1, H2, H3, H4, H5, H6, H7, H8, H9],
		[I1, I2, I3, I4, I5, I6, I7, I8, I9]]) :- 
	diff([A1, B1, C1, D1, E1, F1, G1, H1, I1]),
	diff([A2, B2, C2, D2, E2, F2, G2, H2, I2]),
	diff([A3, B3, C3, D3, E3, F3, G3, H3, I3]),
	diff([A4, B4, C4, D4, E4, F4, G4, H4, I4]),
	diff([A5, B5, C5, D5, E5, F5, G5, H5, I5]),
	diff([A6, B6, C6, D6, E6, F6, G6, H6, I6]),
	diff([A7, B7, C7, D7, E7, F7, G7, H7, I7]),
	diff([A8, B8, C8, D8, E8, F8, G8, H8, I8]),
	diff([A9, B9, C9, D9, E9, F9, G9, H9, I9]).
	
box([
		[A1, A2, A3, A4, A5, A6, A7, A8, A9],
		[B1, B2, B3, B4, B5, B6, B7, B8, B9],
		[C1, C2, C3, C4, C5, C6, C7, C8, C9],
		[D1, D2, D3, D4, D5, D6, D7, D8, D9],
		[E1, E2, E3, E4, E5, E6, E7, E8, E9],
		[F1, F2, F3, F4, F5, F6, F7, F8, F9],
		[G1, G2, G3, G4, G5, G6, G7, G8, G9],
		[H1, H2, H3, H4, H5, H6, H7, H8, H9],
		[I1, I2, I3, I4, I5, I6, I7, I8, I9]]) :- 
	diff([A1, A2, A3, B1, B2, B3, C1, C2, C3]),
	diff([A4, A5, A6, B4, B5, B6, C4, C5, C6]),
	diff([A7, A8, A9, B7, B8, B9, C7, C8, C9]),
	diff([D1, D2, D3, E1, E2, E3, F1, F2, F3]),
	diff([D4, D5, D6, E4, E5, E6, F4, F5, F6]),
	diff([D7, D8, D9, E7, E8, E9, F7, F8, F9]),
	diff([G1, G2, G3, H1, H2, H3, I1, I2, I3]),
	diff([G4, G5, G6, H4, H5, H6, I4, I5, I6]),
	diff([G7, G8, G9, H7, H8, H9, I7, I8, I9]).

sum([], 0).
sum([H|T], Total) :- between(1, 9, H), sum(T, R), Total is R+H.

cages([]).
cages([(Total, Cells)|T]) :- diff(Cells), sum(Cells, Total), cages(T).

sudoku(Grid, Cages) :- 
	rows(Grid), cols(Grid), box(Grid), cages(Cages), label(Grid), appendToFile(Grid).

appendToFile(DataToAdd) :-
	open('output.txt', append, Out),
	write(Out, DataToAdd),
	write(Out, '\n'),
	close(Out).

print_all_solutions(Grid, Cages) :-
	findall(
		Grid,
		sudoku(Grid, Cages),
		Result
	),
	appendToFile(Cages)
	.




























